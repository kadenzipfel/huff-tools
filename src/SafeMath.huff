// Interface
#define function safeAdd(uint256,uint256) pure returns (uint256)
#define function safeSub(uint256,uint256) pure returns (uint256)

// Methods
#define macro SAFE_ADD() = takes (0) returns (0) {
    0x04 calldataload       // [num1]
    dup1                    // [num1, num1]
    0x24 calldataload       // [num2, num1, num1]
    add                     // [result, num1]
    dup1                    // [result, result, num1]
    swap2                   // [num1, result, result]
    gt                      // [is_overflow, result]
    is_overflow jumpi       // [result]

    0x00 mstore             // []
    0x20 0x00 return        // []

    is_overflow:
        pop                 // []
        0x00 0x00 revert    // []
}

#define macro SAFE_SUB() = takes (0) returns (0) {
    0x24 calldataload       // [num2]
    0x04 calldataload       // [num1, num2]
    dup1                    // [num1, num1, num2]
    dup3                    // [num2, num1, num1, num2]
    gt                      // [is_underflow, num1, num2]
    is_underflow jumpi      // [num1, num2]

    sub                     // [result]
    0x00 mstore             // []
    0x20 0x00 return        // []

    is_underflow:
        pop                 // [num2]
        pop                 // []
        0x00 0x00 revert    // []
}

// Main
#define macro MAIN() = takes (0) returns (0) {
    0x00 calldataload 0xE0 shr
    dup1 0xe6cb9013 eq safeAdd jumpi
    dup1 0xa293d1e8 eq safeSub jumpi

    safeAdd: 
        SAFE_ADD()
    safeSub: 
        SAFE_SUB()
}